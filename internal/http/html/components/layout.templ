package components

import (
	"github.com/leg100/otf/internal"
	"github.com/leg100/otf/internal/http/html/components/paths"
	"github.com/leg100/otf/internal/resource"
)

type Breadcrumb struct {
	Name string
	Link templ.SafeURL
}

type LayoutProps struct {
	Title          string
	Organization   resource.ID
	Breadcrumbs    []Breadcrumb
	ContentActions templ.Component
	ContentLinks   templ.Component
	ContentMenu    templ.Component
	PreContent     templ.Component
	PostContent    templ.Component
	Menu           templ.Component
}

templ Layout(props LayoutProps) {
	@BareLayout(BareLayoutProps{
		Title:        props.Title,
		Organization: props.Organization,
		PreContent:   props.PreContent,
		PostContent:  props.PostContent,
	}) {
		<div class="my-2 mx-4">
			<div class="flex flex-wrap items-center gap-4 pb-2 text-xl/9">
				<div class="flex">
					<span id="content-header-title">
						for i, crumb := range props.Breadcrumbs {
							if crumb.Link != "" {
								<a href={ crumb.Link }>{ crumb.Name }</a>
							} else {
								{ crumb.Name }
							}
							if i < (len(props.Breadcrumbs) - 1) {
								/&nbsp;
							}
						}
					</span>
				</div>
				<div>
					if props.ContentActions != nil {
						@props.ContentActions
					}
				</div>
				<ul class="flex grow items-center justify-end gap-4">
					if props.ContentLinks != nil {
						@props.ContentLinks
					}
				</ul>
			</div>
			if props.ContentMenu != nil {
				@props.ContentMenu
			}
			<div class="flex flex-col gap-2 mb-4" id="content">
				{ children... }
			</div>
		</div>
	}
}

type BareLayoutProps struct {
	Title        string
	Organization resource.ID
	Menu         templ.Component
	PreContent   templ.Component
	PostContent  templ.Component
}

templ BareLayout(props BareLayoutProps) {
	{{
		var menu templ.Component
		if props.Organization != nil {
			menu = organizationMenu(props.Organization)
		} else if Authenticated(ctx) {
			menu = siteMenu()
		}
	}}
	<!DOCTYPE html>
	<html lang="en">
		<head>
			<meta charset="utf-8"/>
			<meta name="viewport" content="width=device-width, initial-scale=1"/>
			if props.PreContent != nil {
				@props.PreContent
			}
			<title>{ props.Title } | otf</title>
			<link rel="icon" type="image/svg+xml" href={ AssetPath(ctx, "/static/images/icon.svg") }/>
			<script src={ AssetPath(ctx, "/static/js/main.js") }></script>
			<script src={ AssetPath(ctx, "/static/js/htmx.2.0.4.min.js") }></script>
			<script src={ AssetPath(ctx, "/static/js/htmx-sse.2.2.2.js") }></script>
			<script src={ AssetPath(ctx, "/static/js/htmx-ext-ws.2.0.2.js") }></script>
			<script src={ AssetPath(ctx, "/static/js/theme-change.2.0.2.js") }></script>
			<script defer src={ AssetPath(ctx, "/static/js/alpine.3.14.8.min.js") }></script>
			<link rel="stylesheet" href={ AssetPath(ctx, "/static/css/output.css") }/>
			<link rel="stylesheet" href={ AssetPath(ctx, "/static/css/grid.css") }/>
		</head>
		<!--<body class="flex-col m-0 min-h-screen font-sans">-->
		<body class="min-h-screen grid grid-rows-[auto_1fr_auto] grid-cols-[200px_1fr]">
			<header class="col-span-2 border-b-1 border-base-content/30">
				@navbar(props.Organization)
			</header>
			if menu != nil {
				<div class="border-r-1 border-base-content/30">
					@menu
				</div>
			}
			<!-- if there is no menu then main spans full width of page -->
			<!-- if there is a menu then set a max width for main -->
			<main class={ templ.KV("col-span-2", menu == nil), templ.KV("max-w-7xl", menu != nil) }>
				@Flashes()
				{ children... }
			</main>
			<footer class="col-span-2 border-t-1 border-base-content/30">
				@footer()
			</footer>
			if props.PostContent != nil {
				@props.PostContent
			}
		</body>
	</html>
}

templ navbar(organization resource.ID) {
	<div class="bg-base-100 px-2 flex flex-wrap justify-between items-center gap-6 my-0 mx-auto p-1 font-mono">
		if Authenticated(ctx) {
			<input class="hidden peer" id="hamburger-toggle" type="checkbox"/>
			<label for="hamburger-toggle" class="peer-checked:hidden md:hidden">
				<img src={ AssetPath(ctx, "/static/images/hamburger.svg") } alt="open menu"/>
			</label>
			<label for="hamburger-toggle" class="hidden peer-checked:block md:hidden">
				<img src={ AssetPath(ctx, "/static/images/cross.svg") } alt="close menu"/>
			</label>
		}
		<div class="logo md:order-first">
			<img src={ AssetPath(ctx, "/static/images/logo.svg") } alt="logo"/>
		</div>
		if Authenticated(ctx) {
			<div class="hidden peer-checked:block w-full md:block md:ml-auto md:w-auto">
				<div class="flex flex-col items-center gap-4 py-0.5 md:flex-row">
					<a href={ paths.Admin() }>site</a>
					<a href={ paths.Organizations() }>organizations</a>
					<a href={ paths.Profile() }>profile</a>
				</div>
			</div>
		}
	</div>
}

templ footer() {
	<div class="py-0.5 text-xs font-mono">
		<div class="flex justify-between gap-4 max-w-2xl py-0.5 my-0 mx-auto">
			<div></div>
			<div class="footer-version">
				<a href="https://github.com/leg100/otf">{ internal.Version }</a>
			</div>
			<div class="footer-site-login">
				if !Authenticated(ctx) {
					<a href={ paths.AdminLogin() }>site admin</a>
				}
			</div>
		</div>
	</div>
}
